name: Deploy Beta Build
on: workflow_dispatch

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  deploy:
    name: Deploy 
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Restore NuGet packages
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: nuget restore ${{env.SOLUTION_FILE_PATH}}

      - name: Set github run variables
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          sed -i 's/GITHUB_SHA/${{github.SHA}}/g' Program.cs
          sed -i 's/GITHUB_RUN_NUMBER/${{github.RUN_NUMBER}}/g' Program.cs
      - name: Build
        working-directory: ${{env.GITHUB_WORKSPACE}}
        # Add additional options to the MSBuild command line here (like platform or verbosity level).
        # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
        run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}} /p:DebugSymbols=false

      - name: Zip release
        uses: vimtor/action-zip@v1
        with:
          files: bin/x64/Release/ LICENSE README.md
          recursive: true
          dest: MapAssist.zip

      - name: Publish beta
        uses: "marvinpinto/action-automatic-releases@latest"
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "beta"
          prerelease: false
          files: |
            LICENSE
            README.md
            MapAssist.zip
            
