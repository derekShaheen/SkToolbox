name: Build Beta Project

on: [push, pull_request]
#on:
#  push:
#    branches: 
#      - main
#  pull_request:
#    branches: [ main ]
#  workflow_run:
#    workflows: ["Build Beta Project"]
#    types: [requested]
#    branches:
#      - 'main'

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}


    - name: Zip release
      uses: vimtor/action-zip@v1
      with:
        files: ${{env.SOLUTION_FILE_PATH}}\bin\Release\ README.md
        recursive: true
        dest: SkToolbox.zip

    - name: Publish beta
      uses: "marvinpinto/action-automatic-releases@latest"
      if: ${{ github.ref == 'refs/heads/main' }}
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "Nightly Release"
        prerelease: false
        files: |
          README.md
          SkToolbox.zip
